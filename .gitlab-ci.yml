image: docker
services:
  - name: docker:dind
    alias: docker
variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  GIT_FETCH_EXTRA_FLAGS: "--tags"
  MAJOR_VERSION: "0"
  MINOR_VERSION: "1"
  MAINTENANCE_VERSION: "0"
  DOCKER_TARGET_REPOSITORY: "target_docker_repository"
  DOCKER_IMAGE_NAME: "th2-verifier"
build:
  stage: build
  script:
    - "export VERSION=\"${MAJOR_VERSION}.${MINOR_VERSION}.${MAINTENANCE_VERSION}.${CI_PIPELINE_IID}\""
    - "export FULL_DOCKER_IMAGE_NAME=\"${DOCKER_TARGET_REPOSITORY}/${DOCKER_IMAGE_NAME}:${VERSION}\""
    - "docker build -f ./ci/Dockerfile -t pipeline:${CI_PIPELINE_IID} --build-arg CI_JOB_TOKEN \
        --build-arg CI_PIPELINE_IID --build-arg MAJOR_VERSION --build-arg MINOR_VERSION \
        --build-arg ARTIFACTORY_USER --build-arg ARTIFACTORY_PASS --build-arg ARTIFACTORY_REPO \
        --build-arg DOCKER_IMAGE_NAME=${FULL_DOCKER_IMAGE_NAME} \
        --build-arg ARTIFACTORY_URL --build-arg ARTIFACTORY_RESOLVE_REPO ."
    - "docker create -v $(pwd)/build:/home/build/libs -v $(pwd)/build:/home/build/distributions \
         pipeline:${CI_PIPELINE_IID}"
    - "docker tag pipeline:${CI_PIPELINE_IID} ${FULL_DOCKER_IMAGE_NAME}"
    - "docker login -u $TH2_REGISTRY_USR -p $TH2_REGISTRY_PSW $TH2_REGISTRY_URL"
    - "docker push ${FULL_DOCKER_IMAGE_NAME}"
  artifacts:
    paths:
      - 'build/*.jar'
      - 'build/*.tar'
      - 'build/*.zip'
  cache:
    paths:
      - 'inspection/cache'
inspection:
  stage: build
  script:
    - "docker build -f ./ci/Inspection -t pipeline/inspection:${CI_PIPELINE_IID} --build-arg CI_JOB_TOKEN ."
    - "docker create -v $(pwd)/inspections:/opt/idea -v $(pwd)/cache:/opt/idea/cache pipeline/inspection:${CI_PIPELINE_IID}"
  cache:
    paths:
      - 'cache'
  artifacts:
    paths:
      - 'results/*.xml'

