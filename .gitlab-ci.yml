image: docker:19.03.6
#services:
#  - name: docker:dind
#    alias: docker
variables:
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_DRIVER: host
  DOCKER_TLS_CERTDIR: ""
  GIT_FETCH_EXTRA_FLAGS: "--tags"
git_version:
  script:
    - docker run --rm -v $(pwd):/git/ -v $(pwd)/.git:/git/.git alpine/git:v2.26.2 rev-list --count VERSION-1.1..HEAD -- /git
build:
  stage: build
  script:
    - "export VERSION_MAINTENANCE=$(docker run --rm -v $(pwd):/git/ -v $(pwd)/.git:/git/.git -e GIT_DISCOVERY_ACROSS_FILESYSTEM=1 alpine/git:v2.26.2 rev-list --count VERSION-1.1..HEAD -- /git/)"
    - "docker build -f ./ci/Dockerfile -t pipeline:${CI_PIPELINE_IID} --build-arg CI_JOB_TOKEN \
        --build-arg CI_PIPELINE_IID --build-arg VERSION_MAINTENANCE=${VERSION_MAINTENANCE} \
        --build-arg ARTIFACTORY_USER --build-arg ARTIFACTORY_PASS --build-arg ARTIFACTORY_REPO \
        --build-arg ARTIFACTORY_URL --build-arg ARTIFACTORY_RESOLVE_REPO ."
    - "docker create -v $(pwd)/build:/home/build/libs -v $(pwd)/build:/home/build/distributions \
        -v $(pwd)/inspections:/home/inspections -v $(pwd)/imageName.txt:/home/imageName.txt pipeline:${CI_PIPELINE_IID}"
    - "export IMAGE_NAME=$(cat ./imageName.txt)"
    - "docker tag pipeline:${CI_PIPELINE_IID} ${IMAGE_NAME}"
    - "docker login -u ${TH2_REGISTRY_USR} -p ${TH2_REGISTRY_PSW} ${TH2_REGISTRY_URL}"
#    - "docker push ${IMAGE_NAME}"
  artifacts:
    paths:
      - 'build/*.jar'
      - 'build/*.tar'
      - 'build/*.zip'
      - 'inspection/results/*.xml'
  cache:
    paths:
      - 'inspection/cache'
#  only:
#    variables:
#      - $CI_COMMIT_BRANCH == "master"

