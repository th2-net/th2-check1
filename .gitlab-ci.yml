variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  GIT_FETCH_EXTRA_FLAGS: "--tags"
  MAJOR_VERSION: "0"
  MINOR_VERSION: "1"
  MAINTENANCE_VERSION: "0"
  DOCKER_IMAGE_NAME: "th2-verifier"
stages:
  - build
  - publish
build:
  stage: build
  image: gradle:6.4-jdk11
  script:
    - "export VERSION=\"${MAJOR_VERSION}.${MINOR_VERSION}.${MAINTENANCE_VERSION}.${CI_PIPELINE_IID}$(if [ $CI_COMMIT_BRANCH != 'master' ]; then echo \"-$CI_COMMIT_BRANCH\"; fi)\" && \
            echo \"Version = $VERSION\""
    - "export FULL_DOCKER_IMAGE_NAME=\"${TH2_REGISTRY_URL}/${DOCKER_IMAGE_NAME}:${VERSION}\""
    - "gradle clean build dockerPrepare -Pversion_build=${CI_PIPELINE_IID} \
           -Pversion_major=${MAJOR_VERSION} -Pversion_minor=${MINOR_VERSION} \
           -Pdocker_image_name=${FULL_DOCKER_IMAGE_NAME}"
  cache:
    paths:
      - 'build/*'
  artifacts:
    paths:
      - 'build/libs/*.jar'
      - 'build/distributions/*.tar'
      - 'build/distributions/*.zip'
artifactory_publish:
  stage: publish
  image: gradle:6.4-jdk11
  script:
    - "export VERSION=\"${MAJOR_VERSION}.${MINOR_VERSION}.${MAINTENANCE_VERSION}.${CI_PIPELINE_IID}$(if [ $CI_COMMIT_BRANCH != 'master' ]; then echo \"-$CI_COMMIT_BRANCH\"; fi)\" && \
                  echo \"Version = $VERSION\""
    - "export FULL_DOCKER_IMAGE_NAME=\"${TH2_REGISTRY_URL}/${DOCKER_IMAGE_NAME}:${VERSION}\""
    - "gradle artifactoryPublish -Pversion_build=${CI_PIPELINE_IID} \
               -Partifactory_user=${ARTIFACTORY_USER} \
               -Pversion_major=${MAJOR_VERSION} -Pversion_minor=${MINOR_VERSION} \
               -Partifactory_password=${ARTIFACTORY_PASS} \
               -Partifactory_deploy_repo_key=${ARTIFACTORY_REPO} \
               -Partifactory_url=${ARTIFACTORY_URL} \
               -Partifactory_resolve_repo=${ARTIFACTORY_RESOLVE_REPO}"
  cache:
    paths:
      - 'build/*'
docker_publish:
  image: docker
  services:
    - name: docker:dind
      alias: docker
  stage: publish
  script:
    - "export VERSION=\"${MAJOR_VERSION}.${MINOR_VERSION}.${MAINTENANCE_VERSION}.${CI_PIPELINE_IID}$(if [ $CI_COMMIT_BRANCH != 'master' ]; then echo \"-$CI_COMMIT_BRANCH\"; fi)\" && \
        echo \"Version = $VERSION\""
    - "export FULL_DOCKER_IMAGE_NAME=\"${TH2_REGISTRY_URL}/${DOCKER_IMAGE_NAME}:${VERSION}\""
    - "docker build -f ./ci/Dockerfile -t ${FULL_DOCKER_IMAGE_NAME} ."
    - "docker login -u $TH2_REGISTRY_USR -p $TH2_REGISTRY_PSW $TH2_REGISTRY_URL"
    - "docker push ${FULL_DOCKER_IMAGE_NAME}"
  cache:
    paths:
      - 'build/*'
inspection:
  image: docker
  services:
    - name: docker:dind
      alias: docker
  stage: build
  script:
    - "docker build -f ./ci/Inspection -t pipeline/inspection:${CI_PIPELINE_IID} --build-arg CI_JOB_TOKEN ."
    - "docker create -v $(pwd)/inspections:/opt/idea -v $(pwd)/cache:/opt/idea/cache pipeline/inspection:${CI_PIPELINE_IID}"
  cache:
    paths:
      - 'cache'
  artifacts:
    paths:
      - 'results/*.xml'

