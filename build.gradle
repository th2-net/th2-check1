/*
 * Copyright 2020-2020 Exactpro (Exactpro Systems Limited)
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.google.protobuf' version '0.8.8' apply false
    id 'com.palantir.docker' version '0.25.0' apply false
    id "de.undercouch.download" version "4.0.4" apply false
    id "com.jfrog.artifactory" version '4.15.1'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.artifactory'

    ext {
        sharedDir           = file("${project.rootDir}/shared")
    }

    group = 'com.exactpro.th2'
    version = "${version_major}.${version_minor}-SNAPSHOT"

    sourceCompatibility = 1.11
    targetCompatibility = 1.11

    dependencies {
        api platform('com.exactpro.th2:th2-bom:1.0.0-schema-ci.+')
        implementation "com.exactpro.th2:th2-grpc-event-store"
        implementation "com.exactpro.th2:th2-grpc-infra"
    }


    repositories {
        maven {
            name 'MavenLocal'
            url sharedDir
        }
        mavenCentral()
        maven {
            name 'Schema snapshot'
            url 'http://artifactory5.exp.exactpro.com/artifactory/th2-schema-snapshot-local'
        }
        maven {
            name 'Artifactory snapshot'
            url 'http://artifactory5.exp.exactpro.com/artifactory/libs-snapshot'
        }
        maven {
            name 'Artifactory release'
            url 'http://artifactory5.exp.exactpro.com/artifactory/libs-release'
        }
        mavenLocal()

        configurations.all {
            resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
            resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }

        repositories {
            maven {
                name = 'localRepo'
                url = sharedDir
            }
        }
    }

    artifactory {
        publish {
            defaults {
                // Reference to Gradle publications defined in the build script.
                // This is how we tell the Artifactory Plugin which artifacts should be
                // published to Artifactory.
                publications('mavenJava')
                publishArtifacts = true
                publishBuildInfo = true
                // Properties to be attached to the published artifacts.
                publishPom = true
            }
        }
    }
}

apply plugin: 'application'
apply plugin: 'com.palantir.docker'

ext {
    slf4jVersion        = '1.7.30'

    th2EventStoreVersion   = '1.1-SNAPSHOT'
    th2ConnectivityVersion = '1.1-SNAPSHOT'

    cassandraVersion   = '3.6.0' //FIXME: Migrate to another library for UUID

    dockerImageVersion  = "${version_major}.${version_minor}.${version_maintenance}.${version_build}"
}

archivesBaseName = 'verifier-service'

dependencies {
    implementation project(':grpc-verifier')
    implementation "com.exactpro.th2:th2-common"

    implementation "com.exactpro.sf:sailfish-core:3.2-SNAPSHOT"

    implementation "com.rabbitmq:amqp-client:5.8.0"
    implementation "com.datastax.cassandra:cassandra-driver-core:${cassandraVersion}"//FIXME: Migrate to another library for UUID

    implementation 'com.exactpro.th2:th2-sailfish-utils'
    implementation "com.exactpro.th2:th2-grpc-connectivity"

    implementation "org.slf4j:slf4j-log4j12:${slf4jVersion}"
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"

    testImplementation 'junit:junit:4.12'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'th2-verifier'
        }
    }
}

application {
    mainClassName 'com.exactpro.th2.verifier.VerifyMain'
}

applicationName = archivesBaseName

distTar {
    archiveName "${archivesBaseName}.tar"
}

dockerPrepare {
    dependsOn distTar
}

docker {
    name "${target_docker_repository}/${docke_image_name}:${dockerImageVersion}"
    tag 'local-version', "${docke_image_name}:${dockerImageVersion}"

    copySpec.from(tarTree("$buildDir/distributions/${archivesBaseName}.tar"))
}