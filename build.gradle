/*
 * Copyright 2020-2020 Exactpro (Exactpro Systems Limited)
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.google.protobuf' version '0.8.8' apply false
    id 'com.palantir.docker' version '0.25.0' apply false
    id "de.undercouch.download" version "4.0.4" apply false
    id "com.jfrog.artifactory" version '4.15.1'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
}

allprojects {
    apply plugin: 'kotlin'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.artifactory'

    ext {
        sharedDir           = file("${project.rootDir}/shared")
    }

    group = 'com.exactpro.th2'
    version = release_version

    compileKotlin {
        kotlinOptions.jvmTarget = "11"
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = "11"
    }

    sourceCompatibility = 11
    targetCompatibility = 11

    repositories {
        maven {
            name 'MavenLocal'
            url sharedDir
        }
        mavenCentral()
        maven {
            name 'Schema snapshot'
            url 'http://artifactory5.exp.exactpro.com/artifactory/th2-schema-snapshot-local'
        }
        maven {
            name 'Artifactory snapshot'
            url 'http://artifactory5.exp.exactpro.com/artifactory/libs-snapshot'
        }
        maven {
            name 'Artifactory release'
            url 'http://artifactory5.exp.exactpro.com/artifactory/libs-release'
        }
        mavenLocal()

        configurations.all {
            resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
            resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
        }
    }

    dependencies {
        api platform('com.exactpro.th2:th2-bom:1.0.0-schema-ci.+')
    }


    jar {
        manifest {
            attributes(
                    'Created-By':               "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
                    'Specification-Title':      '',
                    'Specification-Vendor':     'Exactpro Systems LLC',
                    'Implementation-Title':     project.archivesBaseName,
                    'Implementation-Vendor':    'Exactpro Systems LLC',
                    'Implementation-Vendor-Id': 'com.exactpro',
                    'Implementation-Version':   project.version
            )
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }

        repositories {
            maven {
                name = 'localRepo'
                url = sharedDir
            }
        }
    }

    artifactory {
        publish {
            contextUrl = "${artifactory_url}"
            repository {
                repoKey = "${artifactory_deploy_repo_key}" // The Artifactory repository key to publish to
                username = "${artifactory_user}" // The publisher user name
                password = "${artifactory_password}" // The publisher password
            }
            defaults {
                // Reference to Gradle publications defined in the build script.
                // This is how we tell the Artifactory Plugin which artifacts should be
                // published to Artifactory.
                publications('mavenJava')
                publishArtifacts = true
                publishBuildInfo = true
                // Properties to be attached to the published artifacts.
                publishPom = true
            }
        }
    }
}

apply plugin: 'application'
apply plugin: 'com.palantir.docker'

dependencies {
    implementation project(':th2-grpc-verifier')
    implementation "com.exactpro.th2:th2-common"
    implementation 'com.exactpro.th2:th2-sailfish-utils'
    implementation "com.exactpro.th2:th2-grpc-event-store:1.5.0-schema.+" //FIXME: remove version
    implementation "org.slf4j:slf4j-log4j12"
    implementation "org.slf4j:slf4j-api"

    implementation "com.exactpro.sf:sailfish-core:3.2-SNAPSHOT"

    implementation "com.rabbitmq:amqp-client:5.8.0"
    implementation "com.datastax.cassandra:cassandra-driver-core:3.6.0" //FIXME: Migrate to another library for UUID

    implementation 'com.exactpro.th2:th2-sailfish-utils'
    implementation "com.exactpro.th2:th2-grpc-connectivity:1.2.1-schema.+"
    implementation "io.vertx:vertx-grpc:3.8.5"
    
    implementation "io.reactivex.rxjava2:rxjava:2.2.19" // https://github.com/salesforce/reactive-grpc/issues/202

    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
}

test {
    useJUnitPlatform()
}

application {
    mainClassName 'com.exactpro.th2.verifier.VerifyMain'
}

applicationName = 'service'

distTar {
    archiveName "${applicationName}.tar"
}

dockerPrepare {
    dependsOn distTar
}

docker {
    copySpec.from(tarTree("$buildDir/distributions/${applicationName}.tar"))
}
